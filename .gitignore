server/*.exe
server/*.exe~
server/*.dll
server/*.so
server/*.dylib

# Test binary, built with `go test -c`
server/*.test

# Output of the go coverage tool, specifically when used with LiteIDE
server/*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
server/go.work
server/go.work.sum

# env file
server/.env

# Local .terraform directories
server/terraform/.terraform/

# .tfstate files
server/terraform/*.tfstate
server/terraform/*.tfstate.*

# Crash log files
server/terraform/crash.log
server/terraform/crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
server/terraform/*.tfvars
server/terraform/*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
server/terraform/override.tf
server/terraform/override.tf.json
server/terraform/*_override.tf
server/terraform/*_override.tf.json

# Ignore transient lock info files created by terraform apply
server/terraform/.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
server/terraform/.terraformrc
server/terraform/terraform.rc